#Define your properties key value pair here. Every Properties must follow [TYPE.PROPERTYNAME]=VALUE format.
BrowserName = chrome

# Specify the mode of execution (Linear/Remote)
ModeOfExecution= Linear
RemoteVideo=false

#************************************************ Linear Mode **********************************************

# If mode of execution is Linear then set config values Browser.Name,FireFoxProfilePath,Sys.Config.

# If the selected browser is firefox and you want to run the scripts using existing firefox profile, then set FirefoxProfilePath value
FireFoxBinaryPath = C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe
FireFoxProfilePath =
#C:\\Users\\admin\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\na8ktufn.default

# If the selected browser is google chrome and you want to run the scripts using existing google chrome profile, then set ChromeUserDirectoryPath and ChromeProfileFoldername values

ChromeUserDirectoryPath	=C:\\Chrome Driver\\chromedriver.exe
# profile folder name will be there in 'User Data' folder it self. 'Default' is the chrome profile folder name in my machine
ChromeProfileFoldername = Default

# currently running browser name. This value should not be changed as it'll be modified during run time

#*********************************************** Remote Mode ********************************************

# If mode of execution is Remote then set below values
# For executing scripts on GRID set config values Cloud.Type,Cloud.Host.URL,Cloud.Browser.Name
# For executing scripts on Saucelabs or Testingbot set config values Cloud.Type,Cloud.Host.URL,Cloud.Browser.Name,Cloud.TestName,Cloud.Browser.Version,Cloud.Browser.Platform


#Cloud.Host.URL is URL of Grid or Sauce labs or testingbot -

Cloud.Host.URL = http://192.168.0.107:4444/wd/hub
#http://navuluritulasiram:dde8f266-c718-4b58-9cff-cc83999cb3cb@ondemand.saucelabs.com:80/wd/hub
#http://192.168.6.53:4444/wd/hub

#*********************************************** Linear/Remote Mode ******************************************
# Specify if you are using the scripts from 'Windows' or 'MAC' system

# Details of mail account to send reports
SendEmail=false
Display_failuresTC_in_emailbody=true
Attach_zip_folder_to_emailbody=false
Email.SenderMail=userzenq@gmail.com
Email.SenderPassword=Zenq@123
Email.RecipientMail= xxxxxx@zenq.com
Email.CCMail= xxxxxx@zenq.com,xxxxxx@gmail.com
Email.MailSubject=Selenium Gmail Reports
Email.ClientURL=http://www.gmail.com
Email.ClientLogoUrl=https://upload.wikimedia.org/wikipedia/commons/0/0a/Gmail_logo.png
Email.Host = smtp.gmail.com
Email.Port = 25
#Use below host & port details for Office365 account
#Email.Host = smtp.office365.com
#Email.Port = 587

#Since this below data is not being used anywhere in the framework, might be useful for future reference.
#EmailConfig.SendMail = true
#EmailConfig.smtpHost = smtp.bizmail.yahoo.com
#EmailConfig.popHost = pop.bizmail.yahoo.com
#EmailConfig.from = praveen@zenqa.com
#EmailConfig.to = praveen@zenqa.com
#EmailConfig.password = XXXXXXXXXXX

# Modify the below waits according to your running environment and application server.
VERYSHORTWAIT = 5
SHORTWAIT = 15
MEDIUMWAIT = 30
LONGWAIT = 60
VERYLONGWAIT = 120
IMPLICITWAIT = 90
# Set true or False, highlighting elements before performing UI action
HighlightElements = true

# Set true or false for video capture functionality
VideoCapture = false

# Set Balloon popup displayed value
BalloonPoPUp = 5000

# Max Retry count
RetryCount = 1
# Set true or false to keep or remove retry from reports
KeepFailedResult = false
KeepSkippedResult = false
CurrentlyRunningBrowserName = chrome


#LaunchDashboard either automatically or manually
LaunchDashboard=Manual


#Inserting TestWise status into a DB table for analytics
JDBC_DRIVER=com.microsoft.sqlserver.jdbc.SQLServerDriver
DB_URL=jdbc:sqlserver://automationdbz.database.windows.net:1433;database=automationdb;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30
USERNAME=praveen@automationdbz
PASSWORD=second@123
TABLENAME=AutoResult

# Set true or false, To update test results to TestRail
UpdateResultsToTestRail = false

# Testrail account details
# Testrail account URL
TestrailServerUrl = https://xxxx.testrail.net
# Testrail account user name
TestrailUsername = xxxx
# Testrail account password
TestrailPassword = xxxx

# Testrail Configuration details
# Name of the project in test rail consists of test suites
ProjectName = Project Name as in TestRail
# Existed milestone id, if it is blank new milestone will be created
MileStoneID =
# Existed run id, if it is blank new test run will be created
RunID =

############## You Track Account Details & API URL's and End points  ################

# Set true or false, To issue log to YouTrack
issueLogToYouTrack = false

# You Track Account Details
youTrackAccountID=xxxxxxx
youTrackAccountPassword=xxxxxxx

# You Track API URL and End Pints
Api.youTrackURL=https://xxxxxxx.myjetbrains.com
Api.youTrackLoginEndPoint=/youtrack/rest/user/login
Api.youTrackCreateIssueEndPoint=/youtrack/rest/issue

# Project name, created in You Track
youTrack.Project=TIP

#FilePath to store the hub commands when executing on Remote
FileName=HubLog.txt

#Insert automation reports status to DB
DB_INSERTSTATUS=false

############## Atlassian - Jira Account Details & API URL's and End points  ################

# Set true or false, To issue log to Jira
issueLogToJira=false

# Give Project key, which is generated while configuring the project in Jira
Api.projectkey=xxxx

# Give the required Issue type, which is available in your project
# Example Bug or Task etc..
Api.issueType=xxxx

# Give Jira cloud Host in place of 'xxxxxxx'
# Example 'testz123.atlassian.net'
Api.API_BaseURL_Jira=https://xxxxxxx/rest/api/2

# issue end point
Api.createIssue_JiraEndPoint=/issue

# attachment end point
Api.attachment_JiraEndPoint=/issue/${issue_Id}/attachments

#Jira Account credentials:
Api.userName=xxxxxxx
Api.password=xxxxxxx

NumOfReports=2

# ********** Dashboard D3 ************
# Set true or false, to update test resulst to D3-Dashboard
UpdateTestResultsToD3_DashBoard=false

# ResultsApi.URL is set to post test results to Dashboard
ResultsApi.URL = http://192.168.70.132:8180/d3Admin/api/results/add
# Set true/false if all test results to be stored to Dashboard at a time
StoreTestResultsAtSuiteLevel = false
# Set true/false if test results are updating to D3-Dashboard based on Pass percentage
UpdateResultsToD3_BasedOnPassPercentage=false
#Project Id
d3Api.project_Id=xxxxx
#Project User
d3Api.project_User=Test
#Product Name
d3Api.product_Name=Gmail
# Test Device
d3Api.test_Device_Name=DESKTOP

#-----Zephyr for jira-----#
# Set true or false, to update test result in Zephyr
updateZephyr=false
# Give zephyr cloud user url in place of 'xxxxxxx'
# Example 'testz123.atlassian.net'
zephyr.userUrl=xxxxxxx.atlassian.net
# BASE URL for zephyr cloud
zephyr.BASE_URL=https://prod-api.zephyr4jiracloud.com/connect
# Give AccessKey generated from API key in zephyr account
zephyr.accessKey=xxxxxxx
# Give SecretKey generated from API key in zephyr account
zephyr.secretKey=xxxxxxx
# Give accountId generated from zephyr account
zephyr.accountId=xxxxxxx
# Zephyr account created username
zephyr.username=xxxxxxx
# Zephyr account password / APItoken created in zephyr
zephyr.password=xxxxxxx

#Configurations for Slack Integration
SlackNotification=false
slackWebhookUrl=xxxxxxxx

#Configurations for Teams Integration
TeamsNotification=false
TeamsWebhookUrl=xxxxxxxx
